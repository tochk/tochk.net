// Code generated by qtc from "index.qtpl". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

//line index.qtpl:1
package templates

//line index.qtpl:1
import "tochkru-golang/internal/app/datastruct"

//line index.qtpl:2
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line index.qtpl:2
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line index.qtpl:2
func StreamIndexPage(qw422016 *qt422016.Writer, projects []datastruct.Projects, articles []datastruct.Articles, tags map[int]datastruct.Tags, teamMembers map[int]datastruct.TeamMembers, topTags []datastruct.Tags) {
//line index.qtpl:2
	qw422016.N().S(`
`)
//line index.qtpl:3
	qw422016.N().S(Header("Главная"))
//line index.qtpl:3
	qw422016.N().S(`
`)
//line index.qtpl:4
	qw422016.N().S(Menu(topTags))
//line index.qtpl:4
	qw422016.N().S(`
`)
//line index.qtpl:5
	for i := 0; i < 2 && len(projects) > i; i++ {
//line index.qtpl:5
		qw422016.N().S(`
`)
//line index.qtpl:6
		qw422016.N().S(Project(projects[i], tags, teamMembers))
//line index.qtpl:6
		qw422016.N().S(`
`)
//line index.qtpl:7
	}
//line index.qtpl:7
	qw422016.N().S(`
`)
//line index.qtpl:8
	for i := 0; i < 2 && len(articles) > i; i++ {
//line index.qtpl:8
		qw422016.N().S(`
`)
//line index.qtpl:9
		qw422016.N().S(Article(articles[i], tags, teamMembers))
//line index.qtpl:9
		qw422016.N().S(`
`)
//line index.qtpl:10
	}
//line index.qtpl:10
	qw422016.N().S(`
`)
//line index.qtpl:11
	qw422016.N().S(Footer())
//line index.qtpl:11
	qw422016.N().S(`
`)
//line index.qtpl:12
}

//line index.qtpl:12
func WriteIndexPage(qq422016 qtio422016.Writer, projects []datastruct.Projects, articles []datastruct.Articles, tags map[int]datastruct.Tags, teamMembers map[int]datastruct.TeamMembers, topTags []datastruct.Tags) {
//line index.qtpl:12
	qw422016 := qt422016.AcquireWriter(qq422016)
//line index.qtpl:12
	StreamIndexPage(qw422016, projects, articles, tags, teamMembers, topTags)
//line index.qtpl:12
	qt422016.ReleaseWriter(qw422016)
//line index.qtpl:12
}

//line index.qtpl:12
func IndexPage(projects []datastruct.Projects, articles []datastruct.Articles, tags map[int]datastruct.Tags, teamMembers map[int]datastruct.TeamMembers, topTags []datastruct.Tags) string {
//line index.qtpl:12
	qb422016 := qt422016.AcquireByteBuffer()
//line index.qtpl:12
	WriteIndexPage(qb422016, projects, articles, tags, teamMembers, topTags)
//line index.qtpl:12
	qs422016 := string(qb422016.B)
//line index.qtpl:12
	qt422016.ReleaseByteBuffer(qb422016)
//line index.qtpl:12
	return qs422016
//line index.qtpl:12
}
